{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to my Self-learning Notes","text":"<p>This is a website or repo which store my notes when I self-learn courses.</p> <p>Todo:</p> <ul> <li> Learn mit 6.092</li> <li> Learn d2l</li> </ul>"},{"location":"FishBook/FishBook1/","title":"FishBook1","text":""},{"location":"d2l/","title":"\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60","text":""},{"location":"mit6.092/","title":"MIT 6.092","text":"<p>Info</p> <p>\u58f0\u660e\uff1a\u672c\u8bfe\u7a0b\u7684\u7b14\u8bb0\u4e2d\u53ef\u80fd\u5b58\u5728\u4e2d\u82f1\u6587\u6df7\u5408\u4e66\u5199\u7684\u60c5\u51b5\uff0c\u5176\u76ee\u7684\u5728\u4e8e\u66f4\u7cbe\u51c6\u7684\u4f20\u8fbe\u539f\u82f1\u6587Lecture\u4e2d\u8868\u8fbe\u7684\u542b\u4e49\u3002</p>"},{"location":"mit6.092/#\u8bfe\u7a0b\u7b80\u4ecb","title":"\u8bfe\u7a0b\u7b80\u4ecb","text":"<p>\u8fd9\u95e8\u8bfe\u7a0b\u662fMIT\u7684Java\u5165\u95e8\u8bfe\u7a0b\uff0c\u4e00\u8282\u8bfe\u662f\u4e00\u4e2a\u5c0f\u65f6\u7684Lec+\u4e00\u4e2a\u5c0f\u65f6\u7684Lab\uff0c\u6574\u4e2a\u8bfe\u7a0b\u5171\u4e03\u8282(14\u5b66\u65f6)\u3002 \u8bfe\u7a0b\u7684\u5168\u90e8\u8d44\u6e90\u5728: https://ocw.mit.edu/courses/6-092-introduction-to-programming-in-java-january-iap-2010/</p> <p>\u8bfe\u7a0b\u6559\u6750\u5728\uff1ahttps://greenteapress.com/wp/think-java-2e/</p> <p>\u6211\u5bf9\u4e8e\u8fd9\u95e8\u8bfe\u7a0b\u7684\u4ee3\u7801\u5b9e\u73b0\u653e\u7f6e\u4e8e\u4ed3\u5e93\uff1ahttps://github.com/Harbour-z/Course_learning/tree/main/MIT6.092</p> <p>\u5728\u6bcf\u4e00\u4e2aLecture\u7684\u7b14\u8bb0\u5185\u5bb9\u4e2d\u540c\u65f6\u5305\u542b\u4e86\u6211\u5bf9\u4e8e\u5bf9\u5e94Lab\u7684\u601d\u8003\u548c\u8bb0\u5f55\u3002</p> <p>Todo:</p> <ul> <li> \u57282024.12\u5b66\u5b8c\u6240\u6709\u7684Lec\u548c\u5b9e\u73b0\u6240\u6709\u7684Lab</li> </ul>"},{"location":"mit6.092/lec1/","title":"Lecture 1: Types, Variables, Operators","text":"<p>Java can:</p> <ul> <li>Simulate a natural/enginerring process</li> <li>Manipulate PDFs</li> <li>Draw pretty graphics Java runs on a \"virtual machine\" (JVM).</li> </ul>"},{"location":"mit6.092/lec1/#types","title":"Types","text":"<p>Kinds of values that can be stored and manipulated.</p> <p>boolean;  int; double; String</p>"},{"location":"mit6.092/lec1/#variables","title":"Variables","text":"<p>Named location that stores a value  of one particular type. Form:  TYPE NAME;</p>"},{"location":"mit6.092/lec1/#assignment\u8d4b\u503c","title":"Assignment(\u8d4b\u503c)","text":"<p>Can be combined with a variable declaration.(double badPi = 3.14;)</p>"},{"location":"mit6.092/lec1/#operators","title":"Operators","text":"<p>Symbols that preform simple computations.(= + - * /)</p>"},{"location":"mit6.092/lec2/","title":"Lecture 2: More types, Methods, Conditionals","text":""},{"location":"mit6.092/lec2/#mismatched-types","title":"Mismatched Types","text":"<p>Java verifies that types always match.</p>"},{"location":"mit6.092/lec2/#conversion-by-casting\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362","title":"Conversion by casting(\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362)","text":"<pre><code>int a = 2; //a = 2\ndouble a = 2; // a = 2.0 (Implicit)\n\nint a = 18.7; //Error\nint a = (int)18.7; // a = 18\n\ndouble a = 2/3; // a = 0.0\ndouble a = (double)2/3\n</code></pre>"},{"location":"mit6.092/lec2/#methods","title":"Methods","text":"<pre><code>public static void NAME(){\n    STATEMENTS;\n}\n\n// To call a method\nNAME();\n</code></pre>"},{"location":"mit6.092/lec2/#multiple-parameters","title":"Multiple Parameters","text":"<p><pre><code>[...] NAME(TYPE NAME, TYPE NAME){\n  STATEMENTS;\n}\n// To call:\nNAME(arg1, arg2);\n</code></pre> void means \"no type\"</p>"},{"location":"mit6.092/lec2/#return-values","title":"Return Values","text":"<pre><code>pulic static TYPE NAME(){\n  STATEMENTS;\n  return EXPRESSION;\n}\n</code></pre>"},{"location":"mit6.092/lec2/#variable-scope-\u53d8\u91cf\u4f5c\u7528\u57df","title":"Variable Scope \u53d8\u91cf\u4f5c\u7528\u57df","text":"<p>Variables live in the block({}) where they are defined (scope).</p> <p>Method parameters are like defining a new variable in the method.</p>"},{"location":"mit6.092/lec2/#methods-building-blocks","title":"Methods: Building Blocks","text":"<ul> <li>Big programs are built out of small methods.</li> <li>Methods can be individually developed, tested and reused.</li> <li>User of method does not need to know how it works.</li> <li>In CS, this is called \"abstraction\".</li> </ul>"},{"location":"mit6.092/lec3/","title":"Lecture 3: Loops, Arrays","text":"<p>Topics include: good programming style, frequent issues, loops and arrays.</p>"},{"location":"mit6.092/lec3/#signature-of-the-main-method","title":"Signature of the main method","text":"<p>The signature of the main method cannot be modified.</p> <p>\u4e3b\u65b9\u6cd5\u7684\u7b7e\u540d\u6307\u7684\u662f\u65b9\u6cd5\u7684\u540d\u79f0\u548c\u53c2\u6570\u7c7b\u578b\u7684\u7ec4\u5408\uff0c\u5176\u662f\u7531\u8bed\u8a00\u7684\u89c4\u8303\u4e25\u683c\u5b9a\u4e49\u7684\uff0c\u4e0d\u80fd\u968f\u610f\u66f4\u6539\u3002\u5728 Java \u4e2d\uff0c\u4e3b\u65b9\u6cd5\u7684\u7b7e\u540d\uff1a <pre><code>public static void main(String[] args)\n</code></pre> \u4e4b\u6240\u4ee5\u4e0d\u80fd\u88ab\u4fee\u6539\uff0c\u662f\u7531\u4e8e\u7f16\u8bd1\u5668\u6216\u8fd0\u884c\u65f6\u73af\u5883\u4f9d\u8d56\u8fd9\u79cd\u6807\u51c6\u7684\u7b7e\u540d\u6765\u627e\u5230\u5e76\u6267\u884c\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\u3002\u5982\u679c\u66f4\u6539\u4e86\u7b7e\u540d\uff0c\u5982\u6539\u53d8\u8fd4\u56de\u7c7b\u578b\u7b49\uff0c\u7f16\u8bd1\u5668\u6216\u8fd0\u884c\u65f6\u73af\u5883\u5c06\u65e0\u6cd5\u6b63\u786e\u8bc6\u522b\u4e3b\u65b9\u6cd5\uff0c\u8fd9\u6837\u7a0b\u5e8f\u5c31\u65e0\u6cd5\u542f\u52a8\u3002</p>"},{"location":"mit6.092/lec3/#return-values","title":"Return values","text":"<p>If you declare that the method is not void, then it has to return something.</p>"},{"location":"mit6.092/lec3/#good-programming-style","title":"Good Programming Style","text":"<p>The goal of good style is to make your code more readable. So you should better remember the following rules: * use meaningful names * use indentation(\u7f29\u8fdb)-   Ctrl-Shift-F to auto-format the file * Put whitespaces in complex expressions and Put blank lines to improve readability *  Don't duplicate tests .(\u4e0d\u8981\u7f16\u5199\u91cd\u590d\u6d4b\u8bd5)</p>"},{"location":"mit6.092/lec3/#loop","title":"Loop","text":"<p>Continue skips the current iteration of a loop and proceeds directly to the next iteration  </p>"},{"location":"mit6.092/lec3/#arrays","title":"Arrays","text":"<p>An array is an indexed list of values and All elements of an array must have the same type. The index starts at zero and ends at length-1. An array is defined using TYPE[ ] : <pre><code>int[] values1;\nint[][] values2;\nint[] values3 = new int[5];\nint[] values4 = {23,45,35,23,1};\nint size = values4.length;\n</code></pre></p>"},{"location":"mit6.092/lec4/","title":"Lecture4: Classes and Objects","text":""},{"location":"mit6.092/lec4/#lecture-topic","title":"Lecture Topic","text":"<ol> <li>OOP-Object Oriented Programming</li> <li>Defining Classes</li> <li>Using Classes</li> <li>References vs Values</li> <li>Static tyoes and Methods</li> </ol>"},{"location":"mit6.092/lec4/#debugging-notes","title":"Debugging Notes","text":"<ul> <li>Use System.out.println throughout your code to see what is's doing.</li> <li>\u6ce8\u610f\u683c\u5f0f\u5316\u65b9\u4fbf\u9605\u8bfb</li> </ul>"},{"location":"mit6.092/lec4/#java\u7684\u9762\u5411\u5bf9\u8c61","title":"Java\u7684\u9762\u5411\u5bf9\u8c61","text":"<p>\u62bd\u8c61\u51fa\u4e00\u7c7b\u6216\u4e00\u7ec4\u5bf9\u8c61\u7684\u5171\u6027\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e2aClass\u7684\u5b9a\u4e49\u4e0e\u5b9e\u4f8b\u5316\u7684\u8fc7\u7a0b\uff1a <pre><code>public class Baby {\n  String name;\n  boolean isMale;\n  double weight;\n  double decibels;\n  int numPoops = 0;\n  void poop(){\n    numPoops+=1;\n  }\n}\n\n// instance\nBaby mybaby = new Baby();\n</code></pre> \u603b\u7684\u6765\u8bf4\uff0c\u4e00\u4e2a\u7c7b\u5e94\u8be5\u662f\u7531\u6210\u5458\u53d8\u91cffields\u548c\u65b9\u6cd5methods\u7ec4\u6210\u7684\u3002</p> <p>Note\uff1a 1. \u7c7b\u540d\u9996\u5b57\u6bcd\u5927\u5199\uff0c\u4e14\u9700\u8981\u4e0e\u6587\u4ef6\u540d\u4fdd\u6301\u4e00\u81f4\uff1b 2. 1 Class = 1 File\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u6587\u4ef6\u5c31\u662f\u4e00\u4e2a\u7c7b\uff0c\u7c7b\u4e2d\u53ef\u4ee5\u7ee7\u7eed\u5b9a\u4e49\u7c7b\uff1b 3. \u7c7b\u4e2d\u6709<code>main</code>\u65b9\u6cd5\u8868\u793a\u8fd9\u4e2a\u7c7b\u662f\u53ef\u8fd0\u884c\u7684\u3002</p>"},{"location":"mit6.092/lec4/#\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u6784\u9020\u5668-constructor","title":"\u7c7b\u7684\u6784\u9020\u65b9\u6cd5/\u6784\u9020\u5668-Constructor","text":""},{"location":"mit6.092/lec4/#\u6784\u9020\u5668\u5b9a\u4e49","title":"\u6784\u9020\u5668\u5b9a\u4e49","text":"<ul> <li>\u6784\u9020\u5668\u540d\u4e0e\u7c7b\u540d\u76f8\u540c</li> <li>\u6ca1\u6709\u8fd4\u56de\u7c7b\u578b\uff0c\u4e5f\u5373\u65e0\u9700\u8fd4\u56de\u4efb\u4f55\u4e1c\u897f</li> <li>\u6784\u9020\u5668\u901a\u5e38\u521d\u59cb\u5316\u7c7b\u7684\u5b57\u6bb5(\u6210\u5458\u53d8\u91cf)\uff0c\u5b83\u88ab\u81ea\u52a8\u8c03\u7528\u65f6\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u7c7b\u7684\u6210\u5458\u5bf9\u8c61fields\u5206\u914d\u521d\u59cb\u503c\u3002\u4e5f\u5373\u6211\u4eec\u7ed9\u6784\u9020\u5668\u4f20\u5165\u53c2\u6570\u6216\u8005\u81ea\u5b9a\u4e49\u53c2\u6570\uff0c\u800c\u6784\u9020\u5668\u5916\u53ea\u5b9a\u4e49\u6ca1\u6709\u521d\u59cb\u5316\u7684\u5b57\u6bb5\uff0c\u8fd9\u79cd\u6709\u5229\u4e8e\u4ee3\u7801\u7684\u89c4\u8303\u6027\u3002</li> <li>\u6240\u6709\u7c7b\u90fd\u6709\u81f3\u5c11\u4e00\u4e2a\u6784\u9020\u5668(\u591a\u4e2a\u7684\u65f6\u5019\u4f1a\u6839\u636e\u4f20\u5165\u53c2\u6570\u957f\u5ea6\u4e0d\u540c\u8fdb\u884c\u4e0d\u540c\u7684\u6784\u9020)\uff0c\u6ca1\u6709\u663e\u5f0f\u5b50\u5199\u51fa\u7684\u8bdd\u4f1a\u6267\u884c\u9ed8\u8ba4\u5b9a\u4e49\uff1a <pre><code>ClASSNAME (){\n\n}\n</code></pre></li> </ul>"},{"location":"mit6.092/lec4/#\u7c7b\u7684\u4f7f\u7528","title":"\u7c7b\u7684\u4f7f\u7528","text":"<ul> <li>\u5b57\u6bb5fields\u83b7\u53d6\uff1a<code>Object.FieldName</code></li> <li>\u65b9\u6cd5\u8c03\u7528\uff1a<code>Object.MethodName([Arguments])</code></li> </ul>"},{"location":"mit6.092/lec4/#\u503c\u4e0e\u5f15\u7528-references-and-values","title":"\u503c\u4e0e\u5f15\u7528-References and Values","text":""},{"location":"mit6.092/lec4/#primitives-and-references","title":"Primitives and References","text":"<ul> <li>Primitive types\u662fJava\u7684\u57fa\u672c\u7c7b\u578b</li> <li>int, long, double, boolean, char, short, byte, float</li> <li>\u771f\u5b9e\u503c\u5b58\u50a8\u5728\u53d8\u91cf\u4e2d</li> <li>Reference type\u662f\u6570\u7ec4\u548c\u5bf9\u8c61</li> <li>String, int[], Baby</li> </ul>"},{"location":"mit6.092/lec4/#java\u5b58\u50a8primitives\u548cobjects","title":"Java\u5b58\u50a8Primitives\u548cObjects","text":"<p>\u53d8\u91cf\u53ef\u4efb\u610f\u5b58\u50a8\u57fa\u672c\u7c7b\u578b\uff0c\u4f46\u662fobjects\u4e0d\u80fd\u88ab\u53d8\u91cf\u5b58\u50a8\uff0c\u53d8\u91cf\u5b58\u50a8\u7684\u53ea\u662f\u53ef\u4ee5\u786e\u5b9a\u5bf9\u8c61\u4f4d\u7f6e\u7684\u6570\u5b57\u3002  </p> <p>Objects\u7684\u4f4d\u7f6e\u5c31\u53eb\u5f15\u7528reference\uff0c\u7528<code>==</code>\u53ef\u4ee5\u6bd4\u8f83\u5f15\u7528\u3002</p>"},{"location":"mit6.092/lec4/#reference","title":"Reference","text":"<ul> <li>\u7528<code>[]</code>\u6216<code>.</code></li> <li>\u8fd9\u6837\u64cd\u4f5c\u65f6\uff0c\u4f1a\u8ddf\u968f\u5f15\u7528\u6307\u5411\u7684\u5bf9\u8c61\uff0c\u610f\u5473\u7740\u4f1a\u76f4\u63a5\u8ffd\u8e2a\u5230\u5bf9\u8c61\u672c\u8eab</li> <li>\u8fd9\u79cd\u64cd\u4f5c\u4f1a\u53ef\u4ee5\u6539\u53d8\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u4f46\u662f\u5f15\u7528\u672c\u8eab\u4e0d\u4f1a\u53d8\u3002</li> </ul> <p>Info</p> <p>\u5f15\u7528\u7c7b\u4f3c\u6307\u9488\uff0c\u662f\u7528\u4e8e\u64cd\u4f5c\u5bf9\u8c61\u7684\u6570\u636e\u7c7b\u578b\uff0c\u6bd4\u6307\u9488\u66f4\u5b89\u5168\u3002\u5f15\u7528\u4e0d\u662f\u5bf9\u8c61\uff0c\u5b83\u53ea\u662f\u8bbf\u95ee\u5bf9\u8c61\u7684\u4e00\u79cd\u624b\u6bb5\uff0c\u4e00\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u6709\u591a\u4e2a\u5f15\u7528\u6307\u5411\u5b83\u3002\u6bd4\u5982\u8d4b\u503c\u540e\u7684field(\u7528Reference\u7c7b\u578b\u5b9a\u4e49)\u5c31\u662f\u4e00\u4e2a\u5f15\u7528\u3002 \u5728\u5185\u5b58\u5206\u914d\u4e0a\uff0c\u57fa\u672c\u7c7b\u578b\u7684\u53d8\u91cf\u548c\u5f15\u7528\u7c7b\u578b\u7684\u53d8\u91cf\u672c\u8eab\u90fd\u5728\u6808Stack\u5185\u5b58\u4e2d\u5206\u914d\u7a7a\u95f4\uff0c\u4f46\u662f\u5f15\u7528\u6307\u5411\u7684\u5bf9\u8c61\u662f\u5728\u5806heap\u5185\u5b58\u4e2d\u5206\u914d\u7a7a\u95f4\u3002</p>"},{"location":"mit6.092/lec4/#\u9759\u6001\u7c7b\u578b\u548c\u65b9\u6cd5","title":"\u9759\u6001\u7c7b\u578b\u548c\u65b9\u6cd5","text":"<ul> <li>\u4fee\u9970\u5b57\u6bb5\u6216\u65b9\u6cd5</li> <li>Maens the field/method:</li> <li>Is defined for the class declaration\uff0c\u4e5f\u5373\u65e0\u9700\u5b9e\u4f8b\u5316\u7c7b\u5c31\u53ef\u4ee5\u8c03\u7528</li> <li>Is not unique for each instance</li> </ul> <p>\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a <pre><code>public class Baby {\n static int numBabiesMade = 0; \n}\n Baby.numBabiesMade = 100; \nBaby b1 = new Baby();\n Baby b2 = new Baby(); \nBaby.numBabiesMade = 2;\n</code></pre> \u90a3\u4e48</p> <p>b1.numBabiesMade?  b2.numBabiesMade?</p> <p>\u7ecf\u8fc7\u4ee3\u7801\u9a8c\u8bc1\u53ef\u4ee5\u5f97\u5230\u4e0a\u9762\u4e24\u4e2a\u503c\u5747\u4e3a2\uff0c\u4ece\u8fd9\u91cc\u53ef\u4ee5\u770b\u51fa\u5bf9\u4e8e\u9759\u6001\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u6539\u53d8\u4ed6\u4eec\u65f6\u4e5f\u4f1a\u6539\u53d8\u6240\u6709\u8be5\u7c7b\u7684\u5b9e\u4f8b\u4e2d\u6b64\u9759\u6001\u7c7b\u578b\u7684\u503c\u6216\u8005\u9759\u6001\u65b9\u6cd5\u7684\u903b\u8f91\u3002</p> <p>\u975e\u9759\u6001\u65b9\u6cd5\u53ef\u4ee5\u8c03\u7528(Reference)\u9759\u6001\u65b9\u6cd5\uff0c\u56e0\u4e3a\u9759\u6001\u65b9\u6cd5\u672c\u8eab\u4e0d\u4f9d\u8d56\u4e8e\u7279\u5b9a\u7684\u5b9e\u4f8b\uff0c\u53ea\u8981\u7c7b\u5b58\u5728\u5c31\u53ef\u4ee5\u88ab\u8bbf\u95ee\u5230\uff0c\u4f46\u662f\u53cd\u8fc7\u6765\u662f\u80af\u5b9a\u4e0d\u884c\u7684\u3002</p> <p>Thinking</p> <p>\u4e3a\u4ec0\u4e48Java\u4e2dmain\u65b9\u6cd5\u662f\u9759\u6001\u7684</p>"}]}