{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to my Self-learning Notes","text":"<p>This is a website or repo which store my notes when I self-learn courses.</p> <p>Todo:</p> <ul> <li> Learn mit 6.092</li> <li> Learn d2l</li> </ul>"},{"location":"FishBook/FishBook1/","title":"FishBook1","text":""},{"location":"d2l/","title":"\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60","text":""},{"location":"mit6.092/","title":"MIT 6.092","text":"<p>Info</p> <p>\u58f0\u660e\uff1a\u672c\u8bfe\u7a0b\u7684\u7b14\u8bb0\u4e2d\u53ef\u80fd\u5b58\u5728\u4e2d\u82f1\u6587\u6df7\u5408\u4e66\u5199\u7684\u60c5\u51b5\uff0c\u5176\u76ee\u7684\u5728\u4e8e\u66f4\u7cbe\u51c6\u7684\u4f20\u8fbe\u539f\u82f1\u6587Lecture\u4e2d\u8868\u8fbe\u7684\u542b\u4e49\u3002</p>"},{"location":"mit6.092/#\u8bfe\u7a0b\u7b80\u4ecb","title":"\u8bfe\u7a0b\u7b80\u4ecb","text":"<p>\u8fd9\u95e8\u8bfe\u7a0b\u662fMIT\u7684Java\u5165\u95e8\u8bfe\u7a0b\uff0c\u4e00\u8282\u8bfe\u662f\u4e00\u4e2a\u5c0f\u65f6\u7684Lec+\u4e00\u4e2a\u5c0f\u65f6\u7684Lab\uff0c\u6574\u4e2a\u8bfe\u7a0b\u5171\u4e03\u8282(14\u5b66\u65f6)\u3002 \u8bfe\u7a0b\u7684\u5168\u90e8\u5b9e\u73b0\u5728: https://ocw.mit.edu/courses/6-092-introduction-to-programming-in-java-january-iap-2010/</p> <p>\u6211\u5bf9\u4e8e\u8fd9\u95e8\u8bfe\u7a0b\u7684\u4ee3\u7801\u5b9e\u73b0\u653e\u7f6e\u4e8e\u4ed3\u5e93\uff1ahttps://github.com/Harbour-z/Course_learning/tree/main/MIT6.092</p> <p>\u5728\u6bcf\u4e00\u4e2aLecture\u7684\u7b14\u8bb0\u5185\u5bb9\u4e2d\u540c\u65f6\u5305\u542b\u4e86\u6211\u5bf9\u4e8e\u5bf9\u5e94Lab\u7684\u601d\u8003\u548c\u8bb0\u5f55\u3002</p> <p>Todo:</p> <ul> <li> \u57282024.12\u5b66\u5b8c\u6240\u6709\u7684Lec\u548c\u5b9e\u73b0\u6240\u6709\u7684Lab</li> </ul>"},{"location":"mit6.092/lec1/","title":"Lecture 1: Types, Variables, Operators","text":"<p>Java can:</p> <ul> <li>Simulate a natural/enginerring process</li> <li>Manipulate PDFs</li> <li>Draw pretty graphics Java runs on a \"virtual machine\" (JVM).</li> </ul>"},{"location":"mit6.092/lec1/#types","title":"Types","text":"<p>Kinds of values that can be stored and manipulated.</p> <p>boolean;  int; double; String</p>"},{"location":"mit6.092/lec1/#variables","title":"Variables","text":"<p>Named location that stores a value  of one particular type. Form:  TYPE NAME;</p>"},{"location":"mit6.092/lec1/#assignment\u8d4b\u503c","title":"Assignment(\u8d4b\u503c)","text":"<p>Can be combined with a variable declaration.(double badPi = 3.14;)</p>"},{"location":"mit6.092/lec1/#operators","title":"Operators","text":"<p>Symbols that preform simple computations.(= + - * /)</p>"},{"location":"mit6.092/lec2/","title":"Lecture 2: More types, Methods, Conditionals","text":""},{"location":"mit6.092/lec2/#mismatched-types","title":"Mismatched Types","text":"<p>Java verifies that types always match.</p>"},{"location":"mit6.092/lec2/#conversion-by-casting\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362","title":"Conversion by casting(\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362)","text":"<pre><code>int a = 2; //a = 2\ndouble a = 2; // a = 2.0 (Implicit)\n\nint a = 18.7; //Error\nint a = (int)18.7; // a = 18\n\ndouble a = 2/3; // a = 0.0\ndouble a = (double)2/3\n</code></pre>"},{"location":"mit6.092/lec2/#methods","title":"Methods","text":"<pre><code>public static void NAME(){\n    STATEMENTS;\n}\n\n// To call a method\nNAME();\n</code></pre>"},{"location":"mit6.092/lec2/#multiple-parameters","title":"Multiple Parameters","text":"<p><pre><code>[...] NAME(TYPE NAME, TYPE NAME){\n  STATEMENTS;\n}\n// To call:\nNAME(arg1, arg2);\n</code></pre> void means \"no type\"</p>"},{"location":"mit6.092/lec2/#return-values","title":"Return Values","text":"<pre><code>pulic static TYPE NAME(){\n  STATEMENTS;\n  return EXPRESSION;\n}\n</code></pre>"},{"location":"mit6.092/lec2/#variable-scope-\u53d8\u91cf\u4f5c\u7528\u57df","title":"Variable Scope \u53d8\u91cf\u4f5c\u7528\u57df","text":"<p>Variables live in the block({}) where they are defined (scope).</p> <p>Method parameters are like defining a new variable in the method.</p>"},{"location":"mit6.092/lec2/#methods-building-blocks","title":"Methods: Building Blocks","text":"<ul> <li>Big programs are built out of small methods.</li> <li>Methods can be individually developed, tested and reused.</li> <li>User of method does not need to know how it works.</li> <li>In CS, this is called \"abstraction\".</li> </ul>"},{"location":"mit6.092/lec3/","title":"Lecture 3: Loops, Arrays","text":"<p>Topics include: good programming style, frequent issues, loops and arrays.</p>"},{"location":"mit6.092/lec3/#signature-of-the-main-method","title":"Signature of the main method","text":"<p>The signature of the main method cannot be modified.</p> <p>\u4e3b\u65b9\u6cd5\u7684\u7b7e\u540d\u6307\u7684\u662f\u65b9\u6cd5\u7684\u540d\u79f0\u548c\u53c2\u6570\u7c7b\u578b\u7684\u7ec4\u5408\uff0c\u5176\u662f\u7531\u8bed\u8a00\u7684\u89c4\u8303\u4e25\u683c\u5b9a\u4e49\u7684\uff0c\u4e0d\u80fd\u968f\u610f\u66f4\u6539\u3002\u5728 Java \u4e2d\uff0c\u4e3b\u65b9\u6cd5\u7684\u7b7e\u540d\uff1a <pre><code>public static void main(String[] args)\n</code></pre> \u4e4b\u6240\u4ee5\u4e0d\u80fd\u88ab\u4fee\u6539\uff0c\u662f\u7531\u4e8e\u7f16\u8bd1\u5668\u6216\u8fd0\u884c\u65f6\u73af\u5883\u4f9d\u8d56\u8fd9\u79cd\u6807\u51c6\u7684\u7b7e\u540d\u6765\u627e\u5230\u5e76\u6267\u884c\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\u3002\u5982\u679c\u66f4\u6539\u4e86\u7b7e\u540d\uff0c\u5982\u6539\u53d8\u8fd4\u56de\u7c7b\u578b\u7b49\uff0c\u7f16\u8bd1\u5668\u6216\u8fd0\u884c\u65f6\u73af\u5883\u5c06\u65e0\u6cd5\u6b63\u786e\u8bc6\u522b\u4e3b\u65b9\u6cd5\uff0c\u8fd9\u6837\u7a0b\u5e8f\u5c31\u65e0\u6cd5\u542f\u52a8\u3002</p>"},{"location":"mit6.092/lec3/#return-values","title":"Return values","text":"<p>If you declare that the method is not void, then it has to return something.</p>"},{"location":"mit6.092/lec3/#good-programming-style","title":"Good Programming Style","text":"<p>The goal of good style is to make your code more readable. So you should better remember the following rules: * use meaningful names * use indentation(\u7f29\u8fdb)-   Ctrl-Shift-F to auto-format the file * Put whitespaces in complex expressions and Put blank lines to improve readability *  Don't duplicate tests .(\u4e0d\u8981\u7f16\u5199\u91cd\u590d\u6d4b\u8bd5)</p>"},{"location":"mit6.092/lec3/#loop","title":"Loop","text":"<p>Continue skips the current iteration of a loop and proceeds directly to the next iteration  </p>"},{"location":"mit6.092/lec3/#arrays","title":"Arrays","text":"<p>An array is an indexed list of values and All elements of an array must have the same type. The index starts at zero and ends at length-1. An array is defined using TYPE[ ] : <pre><code>int[] values1;\nint[][] values2;\nint[] values3 = new int[5];\nint[] values4 = {23,45,35,23,1};\nint size = values4.length;\n</code></pre></p>"}]}